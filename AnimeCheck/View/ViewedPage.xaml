<Page x:Class="AnimeCheck.View.ViewedPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:local="clr-namespace:AnimeCheck.View"
      xmlns:vm="clr-namespace:AnimeCheck.ViewModel"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="1000"
      Title="ViewedPage">
    <Page.DataContext>
        <vm:ViewedViewModel />
    </Page.DataContext>
    <Page.Resources>
        <Style x:Key="TextBoxAny" TargetType="TextBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="BorderBrush" Value="#FFABADB3"/>
        </Style>
        <Style x:Key="TextBlockAny" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="FontSize" Value="25"/>
        </Style>
        <Style x:Key="BaseButtonAny" TargetType="Button">
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="BorderBrush" Value="#00000000"/>
            <Setter Property="Background" Value="#4C000000"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ButtonAny" TargetType="Button" BasedOn="{StaticResource BaseButtonAny}" >
            <Setter Property="Foreground" Value="#FF9D9999"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="#30000000" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Margin" Value="2,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonDelete" TargetType="Button" BasedOn="{StaticResource BaseButtonAny}">
            <Setter Property="Foreground" Value="#FFA70000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                                BorderThickness="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="Background" Value="#30000000" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Margin" Value="2,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonAdd" TargetType="Button" BasedOn="{StaticResource BaseButtonAny}">
            <Setter Property="Foreground" Value="#FF51A500"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#FF02F702"/>
                                <Setter Property="Background" Value="#30000000" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Margin" Value="2,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SimpleExpanderButtonTemp" 
             TargetType="{x:Type ToggleButton}">
            <Border x:Name="ExpanderButtonBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!--<Rectangle Fill="Transparent"
                            Grid.ColumnSpan="2"/>
                    <Ellipse Name="Circle"
                            Grid.Column="0"
                            Stroke="DarkGray"
                            Width="20"
                            Height="20"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    <Path x:Name="Sign"
                            Grid.Column="0"
                            Data="M 0,5 H 10 M 5,0 V 10 Z"
                            Stroke="#FF666666"
                            Width="10"
                            Height="10"
                            StrokeThickness="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <RotateTransform Angle="0"/>
                        </Path.RenderTransform>
                    </Path>-->
                    <ContentPresenter 
                        x:Name="HeaderContent"
                        Grid.Column="1"
                        Margin="4,0,0,0"
                        ContentSource="Content"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <!--Change the sign to minus when toggled-->
                <!--
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Data" TargetName="Sign" Value="M 0,5 H 10 Z"/>
                </Trigger>
                -->
                <!-- MouseOver, Pressed behaviours-->
                <!--
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Stroke" Value="#FF3C7FB1" TargetName="Circle"/>
                    <Setter Property="Stroke" Value="#222" TargetName="Sign"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Stroke" Value="#FF526C7B" TargetName="Circle"/>
                    <Setter Property="StrokeThickness" Value="1.5" TargetName="Circle"/>
                    <Setter Property="Stroke" Value="#FF003366" TargetName="Sign"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SimpleExpanderTemp" TargetType="{x:Type Expander}">
            <DockPanel>
                <ToggleButton x:Name="ExpanderButton"
                      DockPanel.Dock="Top"
                      Template="{StaticResource SimpleExpanderButtonTemp}"
                      Content="{TemplateBinding Header}"
                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                      OverridesDefaultStyle="True"
                      Padding="1.5,0">
                </ToggleButton>
                <ContentPresenter x:Name="ExpanderContent" 
                                  Visibility="Collapsed" 
                                  DockPanel.Dock="Bottom"/>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter TargetName="ExpanderContent"
                            Property="Visibility" 
                            Value="Visible"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="90"/>
            <RowDefinition Height="40"/>
            <RowDefinition/>
            <RowDefinition Height="390"/>
            <RowDefinition/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25"/>
            <ColumnDefinition Width="950"/>
            <ColumnDefinition Width="25"/>
        </Grid.ColumnDefinitions>
        <Grid.Background>
            <ImageBrush ImageSource="images/4.jpg"/>
        </Grid.Background>
        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1">
            <Grid Background="#4C000000">
                <TextBlock Style="{StaticResource TextBlockAny}" 
                           TextAlignment="Center" 
                           VerticalAlignment="Center" 
                           Text="Поиск" 
                           Width="120"/>
            </Grid>
            <Grid Background="#4C000000">
                <TextBox Style="{StaticResource TextBoxAny}" 
                         Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}" 
                         Width="700" 
                         FontSize="25"/>
            </Grid>
            <Button x:Name="AddButton" 
                    Style="{StaticResource ButtonAdd}" 
                    Command="{Binding ExpandedCommand}"
                    Grid.Column="3" 
                    Content="Добавить"  
                    Width="130"/>
        </StackPanel>
        <Grid Grid.Column="1" Grid.Row="3">
            <DockPanel LastChildFill="True">
                <Expander x:Name="MyExpander" 
                          Template="{StaticResource SimpleExpanderTemp}"
                          IsExpanded="{Binding IsExpanded}"
                          Foreground="White" 
                          Grid.Row="2" 
                          Grid.Column="1" 
                          FontSize="25"
                          Opacity="1" 
                          Margin="0 0 5 0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Vertical" Grid.Row="0">
                            <TextBlock Style="{StaticResource TextBlockAny}" 
                                       Text="Название" FontSize="20"/>
                            <TextBox Style="{StaticResource TextBoxAny}" 
                                     Text="{Binding SelectedAnime.Name}" 
                                     Background="#4C000000" 
                                     FontSize="20"/>
                            <Button Style="{StaticResource ButtonAdd}" 
                                    Content="Добавить аниме" 
                                    FontSize="20"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Grid.Row="1">
                            <TextBlock Style="{StaticResource TextBlockAny}" 
                                       Text="{Binding SelectedAnime.Name}" 
                                       FontSize="20"/>
                            <TextBlock Style="{StaticResource TextBlockAny}" 
                                       Text="Название" 
                                       FontSize="20"/>
                            <TextBox Style="{StaticResource TextBoxAny}" 
                                     Text="{Binding SelectedSeason.Name}" 
                                     Background="#4C000000" 
                                     FontSize="20"/>
                            <TextBlock Style="{StaticResource TextBlockAny}" 
                                       Text="Количество серий" 
                                       FontSize="20"/>
                            <TextBox Style="{StaticResource TextBoxAny}" 
                                     Background="#4C000000" 
                                     FontSize="20"/>
                            <Button Style="{StaticResource ButtonAdd}" 
                                    Content="Добавить часть" 
                                    FontSize="20"/>
                        </StackPanel>
                    </Grid>
                </Expander>
                <TreeView x:Name="AnimeList"
                          DockPanel.Dock="Right"
                          ItemsSource="{Binding Titles}"
                          SelectedItemChanged="TreeView_OnSelectedItemChanged"
                          Foreground="White"
                          FontSize="28"
                          Background="#4C000000"
                          BorderBrush="#FFABADB3">
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                         Color="#26FFFFFF" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" 
                                         Color="#26FFFFFF" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" 
                                         Color="#26FFFFFF" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" 
                                         Color="#26FFFFFF" />
                    </TreeView.Resources>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Viewed}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="600"/>
                                    <ColumnDefinition Width="100"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Name}" 
                                           Style="{StaticResource TextBlockAny}" 
                                           Grid.Column="0"/>
                            </Grid>
                            <HierarchicalDataTemplate.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="680"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Style="{StaticResource TextBlockAny}" 
                                                   Text="{Binding Name}" 
                                                   Grid.Column="0"/>
                                    </Grid>
                                </DataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </DockPanel>
        </Grid>
        <Grid Grid.Row="5" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="385"/>
                <ColumnDefinition Width="385"/>
                <ColumnDefinition Width="130"/>
            </Grid.ColumnDefinitions>
            <Button Style="{StaticResource ButtonAny}" 
                    Grid.Column="0" 
                    Content="♥"/>
            <Button Style="{StaticResource ButtonAny}" 
                    Command="{Binding Path=AddToPlannedCommand}" 
                    CommandParameter="{Binding SelectedSeason}"
                    Grid.Column="1" 
                    Content="Доавить в запланировано"/>
            <Button Style="{StaticResource ButtonAny}" 
                    Command="{Binding Path=AddToWatchCommand}" 
                    CommandParameter="{Binding SelectedSeason}"
                    Grid.Column="2" 
                    Content="Доавить в смотрю"/>
            <Button Style="{StaticResource ButtonDelete}" 
                    Command="{Binding DeleteAnimeCommand}"
                    CommandParameter="{Binding}"
                    Grid.Column="4" 
                    Content="Удалить"/>
        </Grid>
    </Grid>
</Page>

